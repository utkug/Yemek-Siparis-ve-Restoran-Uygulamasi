-- This script was generated by the ERD tool in pgAdmin 4.
BEGIN;


CREATE TABLE IF NOT EXISTS public.address
(
    id integer NOT NULL DEFAULT nextval('address_id_seq'::regclass),
    userid integer NOT NULL,
    cityid smallint NOT NULL,
    townid integer NOT NULL,
    addresstitle character varying(50) COLLATE pg_catalog."default" NOT NULL,
    addresstext character varying(500) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT address_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.admins
(
    id integer NOT NULL DEFAULT nextval('"Admin_Id_seq"'::regclass),
    namesurname character varying(50) COLLATE pg_catalog."default" NOT NULL,
    email character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password_ character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Admin_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cards
(
    id integer NOT NULL DEFAULT nextval('cards_id_seq'::regclass),
    userid integer NOT NULL,
    namesurname character varying(50) COLLATE pg_catalog."default" NOT NULL,
    cardno character varying(16) COLLATE pg_catalog."default" NOT NULL,
    skt character varying(7) COLLATE pg_catalog."default" NOT NULL,
    cvc character varying(3) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT cards_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cart
(
    id integer NOT NULL DEFAULT nextval('cart_id_seq'::regclass),
    foodid integer,
    restaurantid integer,
    userid integer,
    amount integer,
    addressid integer,
    CONSTRAINT cart_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.categories
(
    id integer NOT NULL DEFAULT nextval('"Categories_Id_seq"'::regclass),
    maincategory character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Categories_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cities
(
    id smallint NOT NULL DEFAULT nextval('"CITIES_ID_seq"'::regclass),
    city character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT cities_pk PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.foods
(
    id integer NOT NULL DEFAULT nextval('"Foods_Id_seq"'::regclass),
    categoryid integer NOT NULL,
    restaurantid integer NOT NULL,
    category character varying(50) COLLATE pg_catalog."default" NOT NULL,
    foodname character varying(50) COLLATE pg_catalog."default" NOT NULL,
    unitprice numeric(18, 2) NOT NULL,
    description character varying(500) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Foods_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.orderdetails
(
    id integer NOT NULL DEFAULT nextval('"OrderDetails_Id_seq"'::regclass),
    orderid integer NOT NULL,
    restaurantid integer NOT NULL,
    foodid integer NOT NULL,
    amount smallint NOT NULL,
    unitprice numeric(18, 2) NOT NULL,
    totalprice numeric(18, 2) NOT NULL,
    CONSTRAINT "OrderDetails_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    id integer NOT NULL DEFAULT nextval('"Orders_Id_seq"'::regclass),
    userid integer NOT NULL,
    totalprice numeric(18, 2) NOT NULL,
    addressid integer NOT NULL,
    orderno character varying(8) COLLATE pg_catalog."default" NOT NULL,
    status_ smallint NOT NULL,
    ordernote character varying(200) COLLATE pg_catalog."default",
    date_ character varying(16) COLLATE pg_catalog."default",
    CONSTRAINT "Orders_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.payments
(
    id integer NOT NULL DEFAULT nextval('"Payments_Id_seq"'::regclass),
    orderid integer NOT NULL,
    paymenttype character varying(50) COLLATE pg_catalog."default" NOT NULL,
    date timestamp(6) without time zone NOT NULL,
    totalpayment numeric(18, 2) NOT NULL,
    CONSTRAINT "Payments_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.restaurants
(
    id integer NOT NULL DEFAULT nextval('"Restaurants_Id_seq"'::regclass),
    adminid integer NOT NULL,
    categoryid integer NOT NULL,
    restaurantname character varying(100) COLLATE pg_catalog."default" NOT NULL,
    city character varying(20) COLLATE pg_catalog."default",
    town character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT "Restaurants_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.status
(
    statusfk smallint NOT NULL,
    status character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT status_pkey PRIMARY KEY (statusfk)
);

CREATE TABLE IF NOT EXISTS public.towns
(
    id integer NOT NULL DEFAULT nextval('"Towns_Id_seq"'::regclass),
    cityid smallint NOT NULL,
    town character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Towns_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL DEFAULT nextval('users_id_seq'::regclass),
    namesurname character varying(100) COLLATE pg_catalog."default" NOT NULL,
    gender character varying(5) COLLATE pg_catalog."default" NOT NULL,
    telno character varying(15) COLLATE pg_catalog."default" NOT NULL,
    birthdate date NOT NULL,
    createddate timestamp(6) without time zone NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    password_ character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.address
    ADD CONSTRAINT address_cityid_fkey FOREIGN KEY (cityid)
    REFERENCES public.cities (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.address
    ADD CONSTRAINT address_townid_fkey FOREIGN KEY (townid)
    REFERENCES public.towns (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.address
    ADD CONSTRAINT address_userid_fkey FOREIGN KEY (userid)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cards
    ADD CONSTRAINT cards_userid_fk FOREIGN KEY (userid)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cart
    ADD CONSTRAINT cart_addressid_fk FOREIGN KEY (addressid)
    REFERENCES public.address (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cart
    ADD CONSTRAINT cart_foodid_fk FOREIGN KEY (foodid)
    REFERENCES public.foods (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cart
    ADD CONSTRAINT cart_restaurantid_fk FOREIGN KEY (restaurantid)
    REFERENCES public.restaurants (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cart
    ADD CONSTRAINT cart_userid_fk FOREIGN KEY (userid)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.foods
    ADD CONSTRAINT foods_categoryid_fk FOREIGN KEY (categoryid)
    REFERENCES public.categories (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.foods
    ADD CONSTRAINT foods_restaurantid_fk FOREIGN KEY (restaurantid)
    REFERENCES public.restaurants (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.orderdetails
    ADD CONSTRAINT ordersdetails_foodid_fk FOREIGN KEY (foodid)
    REFERENCES public.foods (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orderdetails
    ADD CONSTRAINT ordersdetails_orderid_fk FOREIGN KEY (orderid)
    REFERENCES public.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orderdetails
    ADD CONSTRAINT ordersdetails_restaurantid_fk FOREIGN KEY (restaurantid)
    REFERENCES public.restaurants (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_addressid_fk FOREIGN KEY (addressid)
    REFERENCES public.address (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_status_fk FOREIGN KEY (status_)
    REFERENCES public.status (statusfk) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_userid_fk FOREIGN KEY (userid)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT payments_orderid_fk FOREIGN KEY (orderid)
    REFERENCES public.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.restaurants
    ADD CONSTRAINT restaurants_adminid_fk FOREIGN KEY (adminid)
    REFERENCES public.admins (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.restaurants
    ADD CONSTRAINT restaurants_categoryid_fk FOREIGN KEY (categoryid)
    REFERENCES public.categories (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.towns
    ADD CONSTRAINT towns_cities_fk FOREIGN KEY (cityid)
    REFERENCES public.cities (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;